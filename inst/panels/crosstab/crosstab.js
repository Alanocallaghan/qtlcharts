// Generated by CoffeeScript 1.7.1
var crosstab;

crosstab = function() {
  var axispos, cellHeight, cellWidth, chart, margin, title, titlepos, xlab, ylab;
  cellHeight = 30;
  cellWidth = 100;
  margin = {
    left: 60,
    top: 40,
    right: 40,
    bottom: 40
  };
  axispos = {
    xtitle: 25,
    ytitle: 30,
    xlabel: 5,
    ylabel: 5
  };
  titlepos = 20;
  title = "";
  xlab = "";
  ylab = "";
  chart = function(selection) {
    return selection.each(function(data) {
      var g, gEnter, height, n, ncol, nrow, svg, tab, tot, width, xmarg, ymarg;
      n = data.x.length;
      if (data.y.length !== n) {
        console.log("data.x.length != data.y.length");
      }
      ncol = data.xcat.length;
      if (d3.max(data.x) >= ncol || d3.min(data.x) < 0) {
        console.log("data.x should be in range 0-" + (ncol - 1));
      }
      nrow = data.ycat.length;
      if (d3.max(data.y) >= nrow || d3.min(data.y) < 0) {
        console.log("data.y should be in range 0-" + (nrow - 1));
      }
      tab = calc_crosstab(data);
      xmarg = colSums(tab);
      ymarg = rowSums(tab);
      tot = sumArray(xmarg);
      console.log("tab: " + tab);
      console.log("tab.length: " + tab.length);
      console.log("tab[0].length: " + tab[0].length);
      console.log("xmarg: " + xmarg);
      console.log("ymarg: " + ymarg);
      console.log("tot: " + tot);
      width = margin.left + margin.right + ncol * cellWidth;
      height = margin.top + margin.bottom + nrow * cellHeight;
      svg = d3.select(this).selectAll("svg").data([data]);
      gEnter = svg.enter().append("svg").append("g");
      svg.attr("width", width + margin.left + margin.right).attr("height", height + margin.top + margin.bottom);
      g = svg.select("g");
      return g.append("rect").attr("x", margin.left).attr("y", margin.top).attr("height", height).attr("width", width).attr("fill", "#e6e6e6").attr("stroke", null).attr("stroke-width", "0");
    });
  };
  chart.cellHeight = function(value) {
    if (!arguments.length) {
      return cellHeight;
    }
    cellHeight = value;
    return chart;
  };
  chart.cellWidth = function(value) {
    if (!arguments.length) {
      return cellWidth;
    }
    cellWidth = value;
    return chart;
  };
  chart.margin = function(value) {
    if (!arguments.length) {
      return margin;
    }
    margin = value;
    return chart;
  };
  chart.axispos = function(value) {
    if (!arguments.length) {
      return axispos;
    }
    axispos = value;
    return chart;
  };
  chart.titlepos = function(value) {
    if (!arguments.length) {
      return titlepos;
    }
    titlepos;
    return chart;
  };
  chart.title = function(value) {
    if (!arguments.length) {
      return title;
    }
    title = value;
    return chart;
  };
  chart.xlab = function(value) {
    if (!arguments.length) {
      return xlab;
    }
    xlab = value;
    return chart;
  };
  chart.ylab = function(value) {
    if (!arguments.length) {
      return ylab;
    }
    ylab = value;
    return chart;
  };
  return chart;
};
