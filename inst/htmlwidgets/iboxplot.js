// Generated by CoffeeScript 2.1.1
// iboxplot: many boxplots linked to histogram for each
// Karl W Broman
HTMLWidgets.widget({
  name: "iboxplot",
  type: "output",
  initialize: function(widgetdiv, width, height) {
    return d3.select(widgetdiv).append("svg").attr("width", width).attr("height", height).attr("class", "qtlcharts");
  },
  //# https://github.com/Alanocallaghan/d3heatmap/blob/master/inst/htmlwidgets/d3heatmap.js
  renderValue: function(widgetdiv, x, instance) {
    return this.doRenderValue(widgetdiv, x, instance);
  },
  doRenderValue: function(widgetdiv, x, instance) {
    var chartOpts, ref, ref1, ref2, svg, widgetid;
    instance.lastValue = x;
    svg = d3.select(widgetdiv).select("svg");
    // clear svg and remove tool tips
    svg.selectAll("*").remove();
    widgetid = d3.select(widgetdiv).attr('id');
    d3.selectAll(`div.d3-tip.${widgetid}`).remove();
    chartOpts = (ref = x.chartOpts) != null ? ref : [];
    chartOpts.width = (ref1 = chartOpts != null ? chartOpts.width : void 0) != null ? ref1 : svg.attr("width");
    chartOpts.height = (ref2 = chartOpts != null ? chartOpts.height : void 0) != null ? ref2 : svg.attr("height");
    svg.attr("width", chartOpts.width);
    svg.attr("height", chartOpts.height);
    return iboxplot(widgetdiv, x.data, chartOpts);
  },
  resize: function(widgetdiv, width, height) {
    d3.select(widgetdiv).select("svg").attr("width", width).attr("height", height);
    return iboxplot(widgetdiv);
  },
  resize: function(el, width, height, instance) {
    if (instance.lastValue) {
      return this.doRenderValue(el, instance.lastValue, instance);
    }
  }
});
